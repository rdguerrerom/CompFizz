You can run Main.py to calculate the eigenvalues for the hydrogen atom. atomic units are used (L=Bohr, M=electron_mass, E=hartree, charge=e). 

This program calculates the l=0 energies and orbitals.

The code uses non-orthogonal basis functions so it has to handle the overlap matrix.
	The basis functions are:
		exp(-alpha_n*r**2)
		with various alphas. Look in the Orbitals.py code.

For this problem, the Schroedingers equation is:
	H@C = E*S@C where * is scalar multiplication and @ is matrix multiplication.
	H is the Hamiltonian matrix, C are the expanion coefficients, E is the
	energy, and S is the overlap matrix with S_ij = < x_i | x_j >

To solve it, we have to find a matrix V such that V*@S@V = I, i.e. V transformforms S to the identity matrix.  Note that V* is the Hermetian Conj. of V.

We can then use V to transform H and C and solve the easier:
	H'C' = EC' 
	With H' = V*@H@V and C' = V^-1@C (inverse of V)

This will give us the eigen-energies and we can get the C's in the orginal basis from V@C' = V@V^-1@C = C

The only paramter the code takes is the number of grid points to plot the wave fuction. You can enter the number of basis functions if you want, but it will be overwritten to 4 automatically (I only have 4 parameters for alpha!)

